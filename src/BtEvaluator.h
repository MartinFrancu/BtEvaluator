/* This file is part of the Spring engine (GPL v2 or later), see LICENSE.html */

#ifndef _BTEVALUATOR_H
#define _BTEVALUATOR_H

// generated by the C++ Wrapper scripts
#include "OOAICallback.h"

#include "BehaviourTree.h"

namespace BT {
	class SpringCommand;


	/**
	 * This is the main C++ entry point of this AI.
	 *
	 * @author	Robin Vobruba <hoijui.quaero@gmail.com>
	 */
	class BtEvaluator {
		typedef std::map<std::string, BT::SpringCommand> CommandMap;
	private:
		springai::OOAICallback* callback;
		springai::Game* game;

		int skirmishAIId;

		BehaviourTree behaviourTree;
		BehaviourTree::EvaluationContext context;

		SpringCommand* resolveCommand(const char*) const;

		void resolveMessage(const char*);
		void sendNodeDefs() const;
	public:
		explicit BtEvaluator(springai::OOAICallback* callback) :
			callback(callback),
			game(callback->GetGame()),
			skirmishAIId(callback != nullptr ? callback->GetSkirmishAIId() : -1),
			behaviourTree(),
			context(callback) {}

		void loadTree();

		~BtEvaluator() {}

		int HandleEvent(int topic, const void* data);

	};
}

#endif // _BTEVALUATOR_H

